('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mPt40')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 0.544922
Sigma  for expected limits: 0.278026

 -- Asymptotic -- 
Expected  2.5%: r < 0.2714
Expected 16.0%: r < 0.3729
Expected 50.0%: r < 0.5449
Expected 84.0%: r < 0.8121
Expected 97.5%: r < 1.1652

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mPt45')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 0.544922
Sigma  for expected limits: 0.278026

 -- Asymptotic -- 
Expected  2.5%: r < 0.2714
Expected 16.0%: r < 0.3729
Expected 50.0%: r < 0.5449
Expected 84.0%: r < 0.8121
Expected 97.5%: r < 1.1652

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mPt50')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 0.544922
Sigma  for expected limits: 0.278026

 -- Asymptotic -- 
Expected  2.5%: r < 0.2714
Expected 16.0%: r < 0.3729
Expected 50.0%: r < 0.5449
Expected 84.0%: r < 0.8121
Expected 97.5%: r < 1.1652

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mPt55')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 0.544922
Sigma  for expected limits: 0.278026

 -- Asymptotic -- 
Expected  2.5%: r < 0.2714
Expected 16.0%: r < 0.3729
Expected 50.0%: r < 0.5449
Expected 84.0%: r < 0.8121
Expected 97.5%: r < 1.1652

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mPt60')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 0.544922
Sigma  for expected limits: 0.278026

 -- Asymptotic -- 
Expected  2.5%: r < 0.2714
Expected 16.0%: r < 0.3729
Expected 50.0%: r < 0.5449
Expected 84.0%: r < 0.8121
Expected 97.5%: r < 1.1652

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mPt65')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 0.544922
Sigma  for expected limits: 0.278026

 -- Asymptotic -- 
Expected  2.5%: r < 0.2714
Expected 16.0%: r < 0.3729
Expected 50.0%: r < 0.5449
Expected 84.0%: r < 0.8121
Expected 97.5%: r < 1.1652

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mPt70')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 0.544922
Sigma  for expected limits: 0.278026

 -- Asymptotic -- 
Expected  2.5%: r < 0.2714
Expected 16.0%: r < 0.3729
Expected 50.0%: r < 0.5449
Expected 84.0%: r < 0.8121
Expected 97.5%: r < 1.1652

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mPt75')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 0.544922
Sigma  for expected limits: 0.278026

 -- Asymptotic -- 
Expected  2.5%: r < 0.2714
Expected 16.0%: r < 0.3729
Expected 50.0%: r < 0.5449
Expected 84.0%: r < 0.8121
Expected 97.5%: r < 1.1652

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mPt80')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 0.544922
Sigma  for expected limits: 0.278026

 -- Asymptotic -- 
Expected  2.5%: r < 0.2714
Expected 16.0%: r < 0.3729
Expected 50.0%: r < 0.5449
Expected 84.0%: r < 0.8121
Expected 97.5%: r < 1.1652

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mPt90')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 0.544922
Sigma  for expected limits: 0.278026

 -- Asymptotic -- 
Expected  2.5%: r < 0.2714
Expected 16.0%: r < 0.3729
Expected 50.0%: r < 0.5449
Expected 84.0%: r < 0.8121
Expected 97.5%: r < 1.1652

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mPt100')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 0.544922
Sigma  for expected limits: 0.278026

 -- Asymptotic -- 
Expected  2.5%: r < 0.2714
Expected 16.0%: r < 0.3729
Expected 50.0%: r < 0.5449
Expected 84.0%: r < 0.8121
Expected 97.5%: r < 1.1652

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mPt125')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 0.544922
Sigma  for expected limits: 0.278026

 -- Asymptotic -- 
Expected  2.5%: r < 0.2714
Expected 16.0%: r < 0.3729
Expected 50.0%: r < 0.5449
Expected 84.0%: r < 0.8121
Expected 97.5%: r < 1.1652

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mPt150')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 0.544922
Sigma  for expected limits: 0.278026

 -- Asymptotic -- 
Expected  2.5%: r < 0.2714
Expected 16.0%: r < 0.3729
Expected 50.0%: r < 0.5449
Expected 84.0%: r < 0.8121
Expected 97.5%: r < 1.1652

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mPt175')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 38
Median for expected limits: 0.560547
Sigma  for expected limits: 0.285999

 -- Asymptotic -- 
Expected  2.5%: r < 0.2770
Expected 16.0%: r < 0.3844
Expected 50.0%: r < 0.5605
Expected 84.0%: r < 0.8421
Expected 97.5%: r < 1.2160

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mPt200')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 33
Median for expected limits: 0.564453
Sigma  for expected limits: 0.287992

 -- Asymptotic -- 
Expected  2.5%: r < 0.2679
Expected 16.0%: r < 0.3756
Expected 50.0%: r < 0.5645
Expected 84.0%: r < 0.8682
Expected 97.5%: r < 1.2890

Done in 0.00 min (cpu), 0.00 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mPt225')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 33
Median for expected limits: 1.37891
Sigma  for expected limits: 0.703537

 -- Asymptotic -- 
Expected  2.5%: r < 0.5736
Expected 16.0%: r < 0.8599
Expected 50.0%: r < 1.3789
Expected 84.0%: r < 2.2473
Expected 97.5%: r < 3.4786

Done in 0.00 min (cpu), 0.00 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mPt250')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 27
Median for expected limits: 16.5
Sigma  for expected limits: 8.41852

 -- Asymptotic -- 
Expected  2.5%: r < 6.8643
Expected 16.0%: r < 10.2142
Expected 50.0%: r < 16.5000
Expected 84.0%: r < 27.1547
Expected 97.5%: r < 42.8007

Done in 0.00 min (cpu), 0.00 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mPt275')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 27
WARNING: Best fit of asimov dataset is at r = 0.092389 (0.004619 times rMax), while it should be at zero
Median for expected limits: 235.25
Sigma  for expected limits: 120.028

 -- Asymptotic -- 
Expected  2.5%: r < 103.3813
Expected 16.0%: r < 150.2565
Expected 50.0%: r < 235.2500
Expected 84.0%: r < 383.4092
Expected 97.5%: r < 598.6591

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mPt300')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 26
Median for expected limits: 229.25
Sigma  for expected limits: 116.966

 -- Asymptotic -- 
Expected  2.5%: r < 67.3870
Expected 16.0%: r < 119.2337
Expected 50.0%: r < 229.2500
Expected 84.0%: r < 443.0793
Expected 97.5%: r < 695.1311

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mPt325')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 26
WARNING: Best fit of asimov dataset is at r = 0.200000 (0.010000 times rMax), while it should be at zero
Median for expected limits: 4000
Sigma  for expected limits: 2040.85

 -- Asymptotic -- 

Done in 0.08 min (cpu), 0.08 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mPt350')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 26
WARNING: Best fit of asimov dataset is at r = 0.200000 (0.010000 times rMax), while it should be at zero
Median for expected limits: 4000
Sigma  for expected limits: 2040.85

 -- Asymptotic -- 

Done in 0.08 min (cpu), 0.08 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mPt375')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 24
WARNING: Best fit of asimov dataset is at r = 0.200000 (0.010000 times rMax), while it should be at zero
Median for expected limits: 4000
Sigma  for expected limits: 2040.85

 -- Asymptotic -- 

Done in 0.07 min (cpu), 0.07 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mPt400')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 16
WARNING: Best fit of asimov dataset is at r = 0.200000 (0.010000 times rMax), while it should be at zero
Median for expected limits: 4000
Sigma  for expected limits: 2040.85

 -- Asymptotic -- 

Done in 0.05 min (cpu), 0.05 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mPt425')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 14
WARNING: Best fit of asimov dataset is at r = 0.200000 (0.010000 times rMax), while it should be at zero
Median for expected limits: 4000
Sigma  for expected limits: 2040.85

 -- Asymptotic -- 

Done in 0.04 min (cpu), 0.04 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mPt450')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 12
WARNING: Best fit of asimov dataset is at r = 0.200000 (0.010000 times rMax), while it should be at zero
Median for expected limits: 4000
Sigma  for expected limits: 2040.85

 -- Asymptotic -- 

Done in 0.03 min (cpu), 0.03 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mPt475')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 10
WARNING: Best fit of asimov dataset is at r = 0.200000 (0.010000 times rMax), while it should be at zero
Median for expected limits: 4000
Sigma  for expected limits: 2040.85

 -- Asymptotic -- 

Done in 0.03 min (cpu), 0.03 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'ePt10')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 0.544922
Sigma  for expected limits: 0.278026

 -- Asymptotic -- 
Expected  2.5%: r < 0.2714
Expected 16.0%: r < 0.3729
Expected 50.0%: r < 0.5449
Expected 84.0%: r < 0.8121
Expected 97.5%: r < 1.1652

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'ePt15')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 0.556641
Sigma  for expected limits: 0.284006

 -- Asymptotic -- 
Expected  2.5%: r < 0.2772
Expected 16.0%: r < 0.3809
Expected 50.0%: r < 0.5566
Expected 84.0%: r < 0.8296
Expected 97.5%: r < 1.1903

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'ePt20')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 0.580078
Sigma  for expected limits: 0.295964

 -- Asymptotic -- 
Expected  2.5%: r < 0.2889
Expected 16.0%: r < 0.3970
Expected 50.0%: r < 0.5801
Expected 84.0%: r < 0.8645
Expected 97.5%: r < 1.2404

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'ePt25')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 38
Median for expected limits: 0.583984
Sigma  for expected limits: 0.297957

 -- Asymptotic -- 
Expected  2.5%: r < 0.2909
Expected 16.0%: r < 0.3996
Expected 50.0%: r < 0.5840
Expected 84.0%: r < 0.8750
Expected 97.5%: r < 1.2585

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'ePt30')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 37
Median for expected limits: 0.607422
Sigma  for expected limits: 0.309915

 -- Asymptotic -- 
Expected  2.5%: r < 0.3002
Expected 16.0%: r < 0.4142
Expected 50.0%: r < 0.6074
Expected 84.0%: r < 0.9052
Expected 97.5%: r < 1.3063

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'ePt35')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 37
Median for expected limits: 0.628906
Sigma  for expected limits: 0.320876

 -- Asymptotic -- 
Expected  2.5%: r < 0.3108
Expected 16.0%: r < 0.4288
Expected 50.0%: r < 0.6289
Expected 84.0%: r < 0.9423
Expected 97.5%: r < 1.3553

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'ePt40')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 37
Median for expected limits: 0.658203
Sigma  for expected limits: 0.335824

 -- Asymptotic -- 
Expected  2.5%: r < 0.3252
Expected 16.0%: r < 0.4488
Expected 50.0%: r < 0.6582
Expected 84.0%: r < 0.9862
Expected 97.5%: r < 1.4185

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'ePt45')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 37
Median for expected limits: 0.693359
Sigma  for expected limits: 0.353761

 -- Asymptotic -- 
Expected  2.5%: r < 0.3413
Expected 16.0%: r < 0.4719
Expected 50.0%: r < 0.6934
Expected 84.0%: r < 1.0388
Expected 97.5%: r < 1.4984

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'ePt50')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 37
Median for expected limits: 0.720703
Sigma  for expected limits: 0.367712

 -- Asymptotic -- 
Expected  2.5%: r < 0.3561
Expected 16.0%: r < 0.4914
Expected 50.0%: r < 0.7207
Expected 84.0%: r < 1.0798
Expected 97.5%: r < 1.5618

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'ePt55')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 36
Median for expected limits: 0.751953
Sigma  for expected limits: 0.383657

 -- Asymptotic -- 
Expected  2.5%: r < 0.3716
Expected 16.0%: r < 0.5127
Expected 50.0%: r < 0.7520
Expected 84.0%: r < 1.1266
Expected 97.5%: r < 1.6296

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'dphi1.40')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 0.544922
Sigma  for expected limits: 0.278026

 -- Asymptotic -- 
Expected  2.5%: r < 0.2714
Expected 16.0%: r < 0.3729
Expected 50.0%: r < 0.5449
Expected 84.0%: r < 0.8121
Expected 97.5%: r < 1.1652

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'dphi1.60')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 0.544922
Sigma  for expected limits: 0.278026

 -- Asymptotic -- 
Expected  2.5%: r < 0.2714
Expected 16.0%: r < 0.3729
Expected 50.0%: r < 0.5449
Expected 84.0%: r < 0.8121
Expected 97.5%: r < 1.1652

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'dphi1.80')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 0.544922
Sigma  for expected limits: 0.278026

 -- Asymptotic -- 
Expected  2.5%: r < 0.2714
Expected 16.0%: r < 0.3729
Expected 50.0%: r < 0.5449
Expected 84.0%: r < 0.8121
Expected 97.5%: r < 1.1652

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'dphi2.00')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 0.544922
Sigma  for expected limits: 0.278026

 -- Asymptotic -- 
Expected  2.5%: r < 0.2714
Expected 16.0%: r < 0.3729
Expected 50.0%: r < 0.5449
Expected 84.0%: r < 0.8121
Expected 97.5%: r < 1.1652

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'dphi2.20')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 0.544922
Sigma  for expected limits: 0.278026

 -- Asymptotic -- 
Expected  2.5%: r < 0.2714
Expected 16.0%: r < 0.3729
Expected 50.0%: r < 0.5449
Expected 84.0%: r < 0.8121
Expected 97.5%: r < 1.1652

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'dphi2.40')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 0.544922
Sigma  for expected limits: 0.278026

 -- Asymptotic -- 
Expected  2.5%: r < 0.2714
Expected 16.0%: r < 0.3729
Expected 50.0%: r < 0.5449
Expected 84.0%: r < 0.8121
Expected 97.5%: r < 1.1652

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'dphi2.60')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 0.544922
Sigma  for expected limits: 0.278026

 -- Asymptotic -- 
Expected  2.5%: r < 0.2714
Expected 16.0%: r < 0.3729
Expected 50.0%: r < 0.5449
Expected 84.0%: r < 0.8121
Expected 97.5%: r < 1.1652

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'dphi2.80')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 38
Median for expected limits: 0.541016
Sigma  for expected limits: 0.276033

 -- Asymptotic -- 
Expected  2.5%: r < 0.2695
Expected 16.0%: r < 0.3723
Expected 50.0%: r < 0.5410
Expected 84.0%: r < 0.8063
Expected 97.5%: r < 1.1569

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'dphi3.00')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 38
Median for expected limits: 0.541016
Sigma  for expected limits: 0.276033

 -- Asymptotic -- 
Expected  2.5%: r < 0.2652
Expected 16.0%: r < 0.3676
Expected 50.0%: r < 0.5410
Expected 84.0%: r < 0.8149
Expected 97.5%: r < 1.1879

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'eDPhiToPfMet0.10')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 37
Median for expected limits: 0.681641
Sigma  for expected limits: 0.347782

 -- Asymptotic -- 
Expected  2.5%: r < 0.3235
Expected 16.0%: r < 0.4536
Expected 50.0%: r < 0.6816
Expected 84.0%: r < 1.0484
Expected 97.5%: r < 1.5566

Done in 0.00 min (cpu), 0.00 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'eDPhiToPfMet0.30')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 0.544922
Sigma  for expected limits: 0.278026

 -- Asymptotic -- 
Expected  2.5%: r < 0.2714
Expected 16.0%: r < 0.3729
Expected 50.0%: r < 0.5449
Expected 84.0%: r < 0.8121
Expected 97.5%: r < 1.1652

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'eDPhiToPfMet0.50')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 0.544922
Sigma  for expected limits: 0.278026

 -- Asymptotic -- 
Expected  2.5%: r < 0.2714
Expected 16.0%: r < 0.3729
Expected 50.0%: r < 0.5449
Expected 84.0%: r < 0.8121
Expected 97.5%: r < 1.1652

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'eDPhiToPfMet0.70')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 0.544922
Sigma  for expected limits: 0.278026

 -- Asymptotic -- 
Expected  2.5%: r < 0.2714
Expected 16.0%: r < 0.3729
Expected 50.0%: r < 0.5449
Expected 84.0%: r < 0.8121
Expected 97.5%: r < 1.1652

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'eDPhiToPfMet0.90')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 0.544922
Sigma  for expected limits: 0.278026

 -- Asymptotic -- 
Expected  2.5%: r < 0.2714
Expected 16.0%: r < 0.3729
Expected 50.0%: r < 0.5449
Expected 84.0%: r < 0.8121
Expected 97.5%: r < 1.1652

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'eDPhiToPfMet1.10')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 0.544922
Sigma  for expected limits: 0.278026

 -- Asymptotic -- 
Expected  2.5%: r < 0.2714
Expected 16.0%: r < 0.3729
Expected 50.0%: r < 0.5449
Expected 84.0%: r < 0.8121
Expected 97.5%: r < 1.1652

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'eDPhiToPfMet1.30')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 0.544922
Sigma  for expected limits: 0.278026

 -- Asymptotic -- 
Expected  2.5%: r < 0.2714
Expected 16.0%: r < 0.3729
Expected 50.0%: r < 0.5449
Expected 84.0%: r < 0.8121
Expected 97.5%: r < 1.1652

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'eDPhiToPfMet1.50')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 0.544922
Sigma  for expected limits: 0.278026

 -- Asymptotic -- 
Expected  2.5%: r < 0.2714
Expected 16.0%: r < 0.3729
Expected 50.0%: r < 0.5449
Expected 84.0%: r < 0.8121
Expected 97.5%: r < 1.1652

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mDPhiToPfMet1.00')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 0.544922
Sigma  for expected limits: 0.278026

 -- Asymptotic -- 
Expected  2.5%: r < 0.2714
Expected 16.0%: r < 0.3729
Expected 50.0%: r < 0.5449
Expected 84.0%: r < 0.8121
Expected 97.5%: r < 1.1652

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mDPhiToPfMet1.20')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 0.544922
Sigma  for expected limits: 0.278026

 -- Asymptotic -- 
Expected  2.5%: r < 0.2714
Expected 16.0%: r < 0.3729
Expected 50.0%: r < 0.5449
Expected 84.0%: r < 0.8121
Expected 97.5%: r < 1.1652

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mDPhiToPfMet1.40')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 0.544922
Sigma  for expected limits: 0.278026

 -- Asymptotic -- 
Expected  2.5%: r < 0.2714
Expected 16.0%: r < 0.3729
Expected 50.0%: r < 0.5449
Expected 84.0%: r < 0.8121
Expected 97.5%: r < 1.1652

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mDPhiToPfMet1.60')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 0.544922
Sigma  for expected limits: 0.278026

 -- Asymptotic -- 
Expected  2.5%: r < 0.2714
Expected 16.0%: r < 0.3729
Expected 50.0%: r < 0.5449
Expected 84.0%: r < 0.8121
Expected 97.5%: r < 1.1652

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mDPhiToPfMet1.80')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 0.544922
Sigma  for expected limits: 0.278026

 -- Asymptotic -- 
Expected  2.5%: r < 0.2714
Expected 16.0%: r < 0.3729
Expected 50.0%: r < 0.5449
Expected 84.0%: r < 0.8121
Expected 97.5%: r < 1.1652

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mDPhiToPfMet2.00')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 0.544922
Sigma  for expected limits: 0.278026

 -- Asymptotic -- 
Expected  2.5%: r < 0.2714
Expected 16.0%: r < 0.3729
Expected 50.0%: r < 0.5449
Expected 84.0%: r < 0.8121
Expected 97.5%: r < 1.1652

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mDPhiToPfMet2.20')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 0.544922
Sigma  for expected limits: 0.278026

 -- Asymptotic -- 
Expected  2.5%: r < 0.2714
Expected 16.0%: r < 0.3729
Expected 50.0%: r < 0.5449
Expected 84.0%: r < 0.8121
Expected 97.5%: r < 1.1652

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mDPhiToPfMet2.40')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 0.544922
Sigma  for expected limits: 0.278026

 -- Asymptotic -- 
Expected  2.5%: r < 0.2714
Expected 16.0%: r < 0.3729
Expected 50.0%: r < 0.5449
Expected 84.0%: r < 0.8121
Expected 97.5%: r < 1.1652

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mDPhiToPfMet2.60')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 39
Median for expected limits: 0.544922
Sigma  for expected limits: 0.278026

 -- Asymptotic -- 
Expected  2.5%: r < 0.2714
Expected 16.0%: r < 0.3729
Expected 50.0%: r < 0.5449
Expected 84.0%: r < 0.8121
Expected 97.5%: r < 1.1652

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mDPhiToPfMet2.80')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 38
Median for expected limits: 0.539062
Sigma  for expected limits: 0.275037

 -- Asymptotic -- 
Expected  2.5%: r < 0.2664
Expected 16.0%: r < 0.3676
Expected 50.0%: r < 0.5391
Expected 84.0%: r < 0.8034
Expected 97.5%: r < 1.1592

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mDPhiToPfMet3.00')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 37
Median for expected limits: 0.732422
Sigma  for expected limits: 0.373692

 -- Asymptotic -- 
Expected  2.5%: r < 0.3591
Expected 16.0%: r < 0.4976
Expected 50.0%: r < 0.7324
Expected 84.0%: r < 1.0974
Expected 97.5%: r < 1.5961

Done in 0.00 min (cpu), 0.00 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mMtToPfMet30')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 0.544922
Sigma  for expected limits: 0.278026

 -- Asymptotic -- 
Expected  2.5%: r < 0.2714
Expected 16.0%: r < 0.3729
Expected 50.0%: r < 0.5449
Expected 84.0%: r < 0.8121
Expected 97.5%: r < 1.1652

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mMtToPfMet60')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 0.548828
Sigma  for expected limits: 0.28002

 -- Asymptotic -- 
Expected  2.5%: r < 0.2733
Expected 16.0%: r < 0.3756
Expected 50.0%: r < 0.5488
Expected 84.0%: r < 0.8135
Expected 97.5%: r < 1.1644

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mMtToPfMet90')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 0.544922
Sigma  for expected limits: 0.278026

 -- Asymptotic -- 
Expected  2.5%: r < 0.2714
Expected 16.0%: r < 0.3750
Expected 50.0%: r < 0.5449
Expected 84.0%: r < 0.8121
Expected 97.5%: r < 1.1652

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mMtToPfMet120')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 39
Median for expected limits: 0.544922
Sigma  for expected limits: 0.278026

 -- Asymptotic -- 
Expected  2.5%: r < 0.2714
Expected 16.0%: r < 0.3750
Expected 50.0%: r < 0.5449
Expected 84.0%: r < 0.8121
Expected 97.5%: r < 1.1652

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mMtToPfMet150')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 39
Median for expected limits: 0.541016
Sigma  for expected limits: 0.276033

 -- Asymptotic -- 
Expected  2.5%: r < 0.2695
Expected 16.0%: r < 0.3702
Expected 50.0%: r < 0.5410
Expected 84.0%: r < 0.8020
Expected 97.5%: r < 1.1544

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mMtToPfMet180')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 36
Median for expected limits: 0.541016
Sigma  for expected limits: 0.276033

 -- Asymptotic -- 
Expected  2.5%: r < 0.2673
Expected 16.0%: r < 0.3689
Expected 50.0%: r < 0.5410
Expected 84.0%: r < 0.8041
Expected 97.5%: r < 1.1556

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mMtToPfMet210')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 36
Median for expected limits: 0.541016
Sigma  for expected limits: 0.276033

 -- Asymptotic -- 
Expected  2.5%: r < 0.2673
Expected 16.0%: r < 0.3689
Expected 50.0%: r < 0.5410
Expected 84.0%: r < 0.8063
Expected 97.5%: r < 1.1634

Done in 0.00 min (cpu), 0.00 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mMtToPfMet240')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 36
Median for expected limits: 0.537109
Sigma  for expected limits: 0.27404

 -- Asymptotic -- 
Expected  2.5%: r < 0.2654
Expected 16.0%: r < 0.3662
Expected 50.0%: r < 0.5371
Expected 84.0%: r < 0.8090
Expected 97.5%: r < 1.1728

Done in 0.00 min (cpu), 0.00 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mMtToPfMet270')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 35
Median for expected limits: 0.544922
Sigma  for expected limits: 0.278026

 -- Asymptotic -- 
Expected  2.5%: r < 0.2661
Expected 16.0%: r < 0.3696
Expected 50.0%: r < 0.5449
Expected 84.0%: r < 0.8251
Expected 97.5%: r < 1.2053

Done in 0.00 min (cpu), 0.00 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mMtToPfMet300')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 34
Median for expected limits: 0.634766
Sigma  for expected limits: 0.323866

 -- Asymptotic -- 
Expected  2.5%: r < 0.3075
Expected 16.0%: r < 0.4289
Expected 50.0%: r < 0.6348
Expected 84.0%: r < 0.9612
Expected 97.5%: r < 1.4041

Done in 0.00 min (cpu), 0.00 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mMtToPfMet330')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 33
Median for expected limits: 0.720703
Sigma  for expected limits: 0.367712

 -- Asymptotic -- 
Expected  2.5%: r < 0.3421
Expected 16.0%: r < 0.4796
Expected 50.0%: r < 0.7207
Expected 84.0%: r < 1.1085
Expected 97.5%: r < 1.6458

Done in 0.00 min (cpu), 0.00 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mMtToPfMet360')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 30
Median for expected limits: 0.871094
Sigma  for expected limits: 0.444444

 -- Asymptotic -- 
Expected  2.5%: r < 0.3981
Expected 16.0%: r < 0.5699
Expected 50.0%: r < 0.8711
Expected 84.0%: r < 1.3815
Expected 97.5%: r < 2.1043

Done in 0.00 min (cpu), 0.00 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mMtToPfMet390')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 29
Median for expected limits: 1.28906
Sigma  for expected limits: 0.657697

 -- Asymptotic -- 
Expected  2.5%: r < 0.5514
Expected 16.0%: r < 0.8136
Expected 50.0%: r < 1.2891
Expected 84.0%: r < 2.1009
Expected 97.5%: r < 3.3088

Done in 0.00 min (cpu), 0.00 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mMtToPfMet420')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 28
Median for expected limits: 2.85156
Sigma  for expected limits: 1.45491

 -- Asymptotic -- 
Expected  2.5%: r < 1.1306
Expected 16.0%: r < 1.7289
Expected 50.0%: r < 2.8516
Expected 84.0%: r < 4.7839
Expected 97.5%: r < 7.6082

Done in 0.00 min (cpu), 0.00 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mMtToPfMet450')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 26
Median for expected limits: 11.4688
Sigma  for expected limits: 5.85151

 -- Asymptotic -- 
Expected  2.5%: r < 3.9312
Expected 16.0%: r < 6.4928
Expected 50.0%: r < 11.4688
Expected 84.0%: r < 20.5203
Expected 97.5%: r < 34.3141

Done in 0.00 min (cpu), 0.00 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mMtToPfMet480')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 26
WARNING: Best fit of asimov dataset is at r = 0.087651 (0.004383 times rMax), while it should be at zero
Median for expected limits: 119.25
Sigma  for expected limits: 60.843

 -- Asymptotic -- 
Expected  2.5%: r < 51.4731
Expected 16.0%: r < 75.0362
Expected 50.0%: r < 119.2500
Expected 84.0%: r < 194.3530
Expected 97.5%: r < 303.4648

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mMtToPfMet510')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 24
WARNING: Best fit of asimov dataset is at r = 0.062161 (0.003108 times rMax), while it should be at zero
Median for expected limits: 200.625
Sigma  for expected limits: 102.362

 -- Asymptotic -- 
Expected  2.5%: r < 82.6794
Expected 16.0%: r < 123.6840
Expected 50.0%: r < 200.6250
Expected 84.0%: r < 336.5740
Expected 97.5%: r < 543.8337

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mMtToPfMet540')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 24
WARNING: Best fit of asimov dataset is at r = 0.200000 (0.010000 times rMax), while it should be at zero
Median for expected limits: 4000
Sigma  for expected limits: 2040.85

 -- Asymptotic -- 

Done in 0.08 min (cpu), 0.08 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mMtToPfMet570')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 22
WARNING: Best fit of asimov dataset is at r = 0.200000 (0.010000 times rMax), while it should be at zero
Median for expected limits: 4000
Sigma  for expected limits: 2040.85

 -- Asymptotic -- 

Done in 0.07 min (cpu), 0.07 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mMtToPfMet600')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 22
WARNING: Best fit of asimov dataset is at r = 0.200000 (0.010000 times rMax), while it should be at zero
Median for expected limits: 4000
Sigma  for expected limits: 2040.85

 -- Asymptotic -- 

Done in 0.07 min (cpu), 0.07 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mMtToPfMet630')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 20
WARNING: Best fit of asimov dataset is at r = 0.200000 (0.010000 times rMax), while it should be at zero
Median for expected limits: 4000
Sigma  for expected limits: 2040.85

 -- Asymptotic -- 

Done in 0.06 min (cpu), 0.06 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mMtToPfMet660')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 20
WARNING: Best fit of asimov dataset is at r = 0.200000 (0.010000 times rMax), while it should be at zero
Median for expected limits: 4000
Sigma  for expected limits: 2040.85

 -- Asymptotic -- 

Done in 0.06 min (cpu), 0.06 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'mMtToPfMet690')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 15
WARNING: Best fit of asimov dataset is at r = 0.200000 (0.010000 times rMax), while it should be at zero
Median for expected limits: 4000
Sigma  for expected limits: 2040.85

 -- Asymptotic -- 

Done in 0.04 min (cpu), 0.04 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'eMtToPfMet250')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 0.544922
Sigma  for expected limits: 0.278026

 -- Asymptotic -- 
Expected  2.5%: r < 0.2714
Expected 16.0%: r < 0.3729
Expected 50.0%: r < 0.5449
Expected 84.0%: r < 0.8121
Expected 97.5%: r < 1.1652

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'eMtToPfMet230')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 0.544922
Sigma  for expected limits: 0.278026

 -- Asymptotic -- 
Expected  2.5%: r < 0.2714
Expected 16.0%: r < 0.3729
Expected 50.0%: r < 0.5449
Expected 84.0%: r < 0.8121
Expected 97.5%: r < 1.1652

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'eMtToPfMet210')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 0.544922
Sigma  for expected limits: 0.278026

 -- Asymptotic -- 
Expected  2.5%: r < 0.2714
Expected 16.0%: r < 0.3729
Expected 50.0%: r < 0.5449
Expected 84.0%: r < 0.8121
Expected 97.5%: r < 1.1652

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'eMtToPfMet190')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 0.544922
Sigma  for expected limits: 0.278026

 -- Asymptotic -- 
Expected  2.5%: r < 0.2714
Expected 16.0%: r < 0.3729
Expected 50.0%: r < 0.5449
Expected 84.0%: r < 0.8121
Expected 97.5%: r < 1.1652

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'eMtToPfMet170')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 0.544922
Sigma  for expected limits: 0.278026

 -- Asymptotic -- 
Expected  2.5%: r < 0.2714
Expected 16.0%: r < 0.3729
Expected 50.0%: r < 0.5449
Expected 84.0%: r < 0.8121
Expected 97.5%: r < 1.1652

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'eMtToPfMet150')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 0.544922
Sigma  for expected limits: 0.278026

 -- Asymptotic -- 
Expected  2.5%: r < 0.2714
Expected 16.0%: r < 0.3729
Expected 50.0%: r < 0.5449
Expected 84.0%: r < 0.8121
Expected 97.5%: r < 1.1652

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'eMtToPfMet130')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 0.544922
Sigma  for expected limits: 0.278026

 -- Asymptotic -- 
Expected  2.5%: r < 0.2714
Expected 16.0%: r < 0.3729
Expected 50.0%: r < 0.5449
Expected 84.0%: r < 0.8121
Expected 97.5%: r < 1.1652

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 0-jet CATEGORY, for cut : ', 'eMtToPfMet110')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 0.544922
Sigma  for expected limits: 0.278026

 -- Asymptotic -- 
Expected  2.5%: r < 0.2714
Expected 16.0%: r < 0.3729
Expected 50.0%: r < 0.5449
Expected 84.0%: r < 0.8121
Expected 97.5%: r < 1.1652

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mPt40')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 52
Median for expected limits: 1.14453
Sigma  for expected limits: 0.583955

 -- Asymptotic -- 
Expected  2.5%: r < 0.5857
Expected 16.0%: r < 0.7974
Expected 50.0%: r < 1.1445
Expected 84.0%: r < 1.6692
Expected 97.5%: r < 2.3413

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mPt45')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 52
Median for expected limits: 1.14453
Sigma  for expected limits: 0.583955

 -- Asymptotic -- 
Expected  2.5%: r < 0.5857
Expected 16.0%: r < 0.7974
Expected 50.0%: r < 1.1445
Expected 84.0%: r < 1.6692
Expected 97.5%: r < 2.3413

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mPt50')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 52
Median for expected limits: 1.14453
Sigma  for expected limits: 0.583955

 -- Asymptotic -- 
Expected  2.5%: r < 0.5857
Expected 16.0%: r < 0.7974
Expected 50.0%: r < 1.1445
Expected 84.0%: r < 1.6692
Expected 97.5%: r < 2.3413

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mPt55')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 52
Median for expected limits: 1.14453
Sigma  for expected limits: 0.583955

 -- Asymptotic -- 
Expected  2.5%: r < 0.5857
Expected 16.0%: r < 0.7974
Expected 50.0%: r < 1.1445
Expected 84.0%: r < 1.6692
Expected 97.5%: r < 2.3413

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mPt60')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 52
Median for expected limits: 1.14453
Sigma  for expected limits: 0.583955

 -- Asymptotic -- 
Expected  2.5%: r < 0.5857
Expected 16.0%: r < 0.7974
Expected 50.0%: r < 1.1445
Expected 84.0%: r < 1.6692
Expected 97.5%: r < 2.3413

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mPt65')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 52
Median for expected limits: 1.14453
Sigma  for expected limits: 0.583955

 -- Asymptotic -- 
Expected  2.5%: r < 0.5857
Expected 16.0%: r < 0.7974
Expected 50.0%: r < 1.1445
Expected 84.0%: r < 1.6692
Expected 97.5%: r < 2.3413

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mPt70')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 52
Median for expected limits: 1.14453
Sigma  for expected limits: 0.583955

 -- Asymptotic -- 
Expected  2.5%: r < 0.5857
Expected 16.0%: r < 0.7974
Expected 50.0%: r < 1.1445
Expected 84.0%: r < 1.6692
Expected 97.5%: r < 2.3413

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mPt75')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 52
Median for expected limits: 1.14453
Sigma  for expected limits: 0.583955

 -- Asymptotic -- 
Expected  2.5%: r < 0.5857
Expected 16.0%: r < 0.7974
Expected 50.0%: r < 1.1445
Expected 84.0%: r < 1.6692
Expected 97.5%: r < 2.3413

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mPt80')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 52
Median for expected limits: 1.14453
Sigma  for expected limits: 0.583955

 -- Asymptotic -- 
Expected  2.5%: r < 0.5857
Expected 16.0%: r < 0.7974
Expected 50.0%: r < 1.1445
Expected 84.0%: r < 1.6692
Expected 97.5%: r < 2.3413

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mPt90')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 52
Median for expected limits: 1.14453
Sigma  for expected limits: 0.583955

 -- Asymptotic -- 
Expected  2.5%: r < 0.5857
Expected 16.0%: r < 0.7974
Expected 50.0%: r < 1.1445
Expected 84.0%: r < 1.6692
Expected 97.5%: r < 2.3413

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mPt100')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 52
Median for expected limits: 1.14453
Sigma  for expected limits: 0.583955

 -- Asymptotic -- 
Expected  2.5%: r < 0.5857
Expected 16.0%: r < 0.7974
Expected 50.0%: r < 1.1445
Expected 84.0%: r < 1.6692
Expected 97.5%: r < 2.3413

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mPt125')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 52
Median for expected limits: 1.14453
Sigma  for expected limits: 0.583955

 -- Asymptotic -- 
Expected  2.5%: r < 0.5857
Expected 16.0%: r < 0.7974
Expected 50.0%: r < 1.1445
Expected 84.0%: r < 1.6692
Expected 97.5%: r < 2.3413

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mPt150')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 52
Median for expected limits: 1.14453
Sigma  for expected limits: 0.583955

 -- Asymptotic -- 
Expected  2.5%: r < 0.5857
Expected 16.0%: r < 0.7974
Expected 50.0%: r < 1.1445
Expected 84.0%: r < 1.6692
Expected 97.5%: r < 2.3413

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mPt175')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 53
Median for expected limits: 1.10547
Sigma  for expected limits: 0.564025

 -- Asymptotic -- 
Expected  2.5%: r < 0.5592
Expected 16.0%: r < 0.7619
Expected 50.0%: r < 1.1055
Expected 84.0%: r < 1.6298
Expected 97.5%: r < 2.3266

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mPt200')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 50
Median for expected limits: 1.16016
Sigma  for expected limits: 0.591927

 -- Asymptotic -- 
Expected  2.5%: r < 0.5733
Expected 16.0%: r < 0.7911
Expected 50.0%: r < 1.1602
Expected 84.0%: r < 1.7475
Expected 97.5%: r < 2.5333

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mPt225')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 47
Median for expected limits: 1.82031
Sigma  for expected limits: 0.928748

 -- Asymptotic -- 
Expected  2.5%: r < 0.8462
Expected 16.0%: r < 1.2001
Expected 50.0%: r < 1.8203
Expected 84.0%: r < 2.8434
Expected 97.5%: r < 4.2945

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mPt250')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 45
Median for expected limits: 5.48438
Sigma  for expected limits: 2.7982

 -- Asymptotic -- 
Expected  2.5%: r < 2.4530
Expected 16.0%: r < 3.5305
Expected 50.0%: r < 5.4844
Expected 84.0%: r < 8.7635
Expected 97.5%: r < 13.4004

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mPt275')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 43
WARNING: Best fit of asimov dataset is at r = 0.028806 (0.001440 times rMax), while it should be at zero
Median for expected limits: 17.9844
Sigma  for expected limits: 9.17587

 -- Asymptotic -- 
Expected  2.5%: r < 7.6223
Expected 16.0%: r < 11.2247
Expected 50.0%: r < 17.9844
Expected 84.0%: r < 29.5976
Expected 97.5%: r < 47.0432

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mPt300')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 41
WARNING: Best fit of asimov dataset is at r = 0.086278 (0.004314 times rMax), while it should be at zero
Median for expected limits: 67.25
Sigma  for expected limits: 34.3119

 -- Asymptotic -- 
Expected  2.5%: r < 27.3203
Expected 16.0%: r < 41.2021
Expected 50.0%: r < 67.2500
Expected 84.0%: r < 113.8927
Expected 97.5%: r < 182.5541

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mPt325')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
WARNING: Best fit of asimov dataset is at r = 0.026356 (0.001318 times rMax), while it should be at zero
Median for expected limits: 84.25
Sigma  for expected limits: 42.9855

 -- Asymptotic -- 
Expected  2.5%: r < 26.9863
Expected 16.0%: r < 45.5523
Expected 50.0%: r < 84.2500
Expected 84.0%: r < 157.4597
Expected 97.5%: r < 255.4206

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mPt350')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
WARNING: Best fit of asimov dataset is at r = 0.064215 (0.003211 times rMax), while it should be at zero
Median for expected limits: 119.75
Sigma  for expected limits: 61.0981

 -- Asymptotic -- 
Expected  2.5%: r < 35.5508
Expected 16.0%: r < 62.5208
Expected 50.0%: r < 119.7500
Expected 84.0%: r < 231.4449
Expected 97.5%: r < 363.1056

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mPt375')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 34
WARNING: Best fit of asimov dataset is at r = 0.200000 (0.010000 times rMax), while it should be at zero
Median for expected limits: 4000
Sigma  for expected limits: 2040.85

 -- Asymptotic -- 

Done in 0.11 min (cpu), 0.11 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mPt400')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 32
WARNING: Best fit of asimov dataset is at r = 0.200000 (0.010000 times rMax), while it should be at zero
Median for expected limits: 4000
Sigma  for expected limits: 2040.85

 -- Asymptotic -- 

Done in 0.10 min (cpu), 0.10 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mPt425')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 30
WARNING: Best fit of asimov dataset is at r = 0.200000 (0.010000 times rMax), while it should be at zero
Median for expected limits: 4000
Sigma  for expected limits: 2040.85

 -- Asymptotic -- 

Done in 0.10 min (cpu), 0.10 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mPt450')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 30
WARNING: Best fit of asimov dataset is at r = 0.200000 (0.010000 times rMax), while it should be at zero
Median for expected limits: 4000
Sigma  for expected limits: 2040.85

 -- Asymptotic -- 

Done in 0.09 min (cpu), 0.09 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mPt475')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 30
WARNING: Best fit of asimov dataset is at r = 0.200000 (0.010000 times rMax), while it should be at zero
Median for expected limits: 4000
Sigma  for expected limits: 2040.85

 -- Asymptotic -- 

Done in 0.10 min (cpu), 0.10 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'ePt10')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 52
Median for expected limits: 1.14453
Sigma  for expected limits: 0.583955

 -- Asymptotic -- 
Expected  2.5%: r < 0.5857
Expected 16.0%: r < 0.7974
Expected 50.0%: r < 1.1445
Expected 84.0%: r < 1.6692
Expected 97.5%: r < 2.3413

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'ePt15')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 52
Median for expected limits: 1.16797
Sigma  for expected limits: 0.595913

 -- Asymptotic -- 
Expected  2.5%: r < 0.6000
Expected 16.0%: r < 0.8152
Expected 50.0%: r < 1.1680
Expected 84.0%: r < 1.7034
Expected 97.5%: r < 2.3892

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'ePt20')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 52
Median for expected limits: 1.19922
Sigma  for expected limits: 0.611858

 -- Asymptotic -- 
Expected  2.5%: r < 0.6160
Expected 16.0%: r < 0.8370
Expected 50.0%: r < 1.1992
Expected 84.0%: r < 1.7489
Expected 97.5%: r < 2.4680

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'ePt25')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 52
Median for expected limits: 1.26172
Sigma  for expected limits: 0.643746

 -- Asymptotic -- 
Expected  2.5%: r < 0.6456
Expected 16.0%: r < 0.8791
Expected 50.0%: r < 1.2617
Expected 84.0%: r < 1.8401
Expected 97.5%: r < 2.5810

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'ePt30')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 52
Median for expected limits: 1.30078
Sigma  for expected limits: 0.663676

 -- Asymptotic -- 
Expected  2.5%: r < 0.6631
Expected 16.0%: r < 0.9047
Expected 50.0%: r < 1.3008
Expected 84.0%: r < 1.8971
Expected 97.5%: r < 2.6609

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'ePt35')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 52
Median for expected limits: 1.34766
Sigma  for expected limits: 0.687592

 -- Asymptotic -- 
Expected  2.5%: r < 0.6870
Expected 16.0%: r < 0.9373
Expected 50.0%: r < 1.3477
Expected 84.0%: r < 1.9654
Expected 97.5%: r < 2.7735

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'ePt40')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 51
Median for expected limits: 1.42578
Sigma  for expected limits: 0.727453

 -- Asymptotic -- 
Expected  2.5%: r < 0.7296
Expected 16.0%: r < 0.9934
Expected 50.0%: r < 1.4258
Expected 84.0%: r < 2.0907
Expected 97.5%: r < 2.9413

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'ePt45')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 52
Median for expected limits: 1.50391
Sigma  for expected limits: 0.767313

 -- Asymptotic -- 
Expected  2.5%: r < 0.7725
Expected 16.0%: r < 1.0496
Expected 50.0%: r < 1.5039
Expected 84.0%: r < 2.1813
Expected 97.5%: r < 3.0689

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'ePt50')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 55
Median for expected limits: 1.48047
Sigma  for expected limits: 0.755355

 -- Asymptotic -- 
Expected  2.5%: r < 0.7489
Expected 16.0%: r < 1.0261
Expected 50.0%: r < 1.4805
Expected 84.0%: r < 2.1709
Expected 97.5%: r < 3.0723

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'ePt55')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 53
Median for expected limits: 1.5625
Sigma  for expected limits: 0.797209

 -- Asymptotic -- 
Expected  2.5%: r < 0.7904
Expected 16.0%: r < 1.0769
Expected 50.0%: r < 1.5625
Expected 84.0%: r < 2.2912
Expected 97.5%: r < 3.2618

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'dphi1.40')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 45
Median for expected limits: 1.14453
Sigma  for expected limits: 0.583955

 -- Asymptotic -- 
Expected  2.5%: r < 0.5857
Expected 16.0%: r < 0.7974
Expected 50.0%: r < 1.1445
Expected 84.0%: r < 1.6692
Expected 97.5%: r < 2.3413

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'dphi1.60')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 45
Median for expected limits: 1.13672
Sigma  for expected limits: 0.579969

 -- Asymptotic -- 
Expected  2.5%: r < 0.5839
Expected 16.0%: r < 0.7934
Expected 50.0%: r < 1.1367
Expected 84.0%: r < 1.6578
Expected 97.5%: r < 2.3253

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'dphi1.80')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 45
Median for expected limits: 1.14453
Sigma  for expected limits: 0.583955

 -- Asymptotic -- 
Expected  2.5%: r < 0.5834
Expected 16.0%: r < 0.7960
Expected 50.0%: r < 1.1445
Expected 84.0%: r < 1.6646
Expected 97.5%: r < 2.3384

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'dphi2.00')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 45
Median for expected limits: 1.14453
Sigma  for expected limits: 0.583955

 -- Asymptotic -- 
Expected  2.5%: r < 0.5857
Expected 16.0%: r < 0.7974
Expected 50.0%: r < 1.1445
Expected 84.0%: r < 1.6692
Expected 97.5%: r < 2.3413

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'dphi2.20')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 44
Median for expected limits: 1.14453
Sigma  for expected limits: 0.583955

 -- Asymptotic -- 
Expected  2.5%: r < 0.5834
Expected 16.0%: r < 0.7960
Expected 50.0%: r < 1.1445
Expected 84.0%: r < 1.6601
Expected 97.5%: r < 2.3356

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'dphi2.40')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 41
Median for expected limits: 1.14453
Sigma  for expected limits: 0.583955

 -- Asymptotic -- 
Expected  2.5%: r < 0.5834
Expected 16.0%: r < 0.7960
Expected 50.0%: r < 1.1445
Expected 84.0%: r < 1.6692
Expected 97.5%: r < 2.3413

Done in 0.00 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'dphi2.60')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 1.19922
Sigma  for expected limits: 0.611858

 -- Asymptotic -- 
Expected  2.5%: r < 0.6207
Expected 16.0%: r < 0.8399
Expected 50.0%: r < 1.1992
Expected 84.0%: r < 1.7394
Expected 97.5%: r < 2.4174

Done in 0.00 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'dphi2.80')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 1.17578
Sigma  for expected limits: 0.599899

 -- Asymptotic -- 
Expected  2.5%: r < 0.6040
Expected 16.0%: r < 0.8206
Expected 50.0%: r < 1.1758
Expected 84.0%: r < 1.7148
Expected 97.5%: r < 2.4052

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'dphi3.00')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 39
Median for expected limits: 1.61719
Sigma  for expected limits: 0.825111

 -- Asymptotic -- 
Expected  2.5%: r < 0.8054
Expected 16.0%: r < 1.1067
Expected 50.0%: r < 1.6172
Expected 84.0%: r < 2.3972
Expected 97.5%: r < 3.4506

Done in 0.00 min (cpu), 0.00 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'eDPhiToPfMet0.10')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 51
Median for expected limits: 1.5625
Sigma  for expected limits: 0.797209

 -- Asymptotic -- 
Expected  2.5%: r < 0.7843
Expected 16.0%: r < 1.0731
Expected 50.0%: r < 1.5625
Expected 84.0%: r < 2.3161
Expected 97.5%: r < 3.3149

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'eDPhiToPfMet0.30')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 52
Median for expected limits: 1.14453
Sigma  for expected limits: 0.583955

 -- Asymptotic -- 
Expected  2.5%: r < 0.5857
Expected 16.0%: r < 0.7974
Expected 50.0%: r < 1.1445
Expected 84.0%: r < 1.6692
Expected 97.5%: r < 2.3413

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'eDPhiToPfMet0.50')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 52
Median for expected limits: 1.14453
Sigma  for expected limits: 0.583955

 -- Asymptotic -- 
Expected  2.5%: r < 0.5857
Expected 16.0%: r < 0.7974
Expected 50.0%: r < 1.1445
Expected 84.0%: r < 1.6692
Expected 97.5%: r < 2.3413

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'eDPhiToPfMet0.70')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 52
Median for expected limits: 1.14453
Sigma  for expected limits: 0.583955

 -- Asymptotic -- 
Expected  2.5%: r < 0.5857
Expected 16.0%: r < 0.7974
Expected 50.0%: r < 1.1445
Expected 84.0%: r < 1.6692
Expected 97.5%: r < 2.3413

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'eDPhiToPfMet0.90')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 52
Median for expected limits: 1.14453
Sigma  for expected limits: 0.583955

 -- Asymptotic -- 
Expected  2.5%: r < 0.5857
Expected 16.0%: r < 0.7974
Expected 50.0%: r < 1.1445
Expected 84.0%: r < 1.6692
Expected 97.5%: r < 2.3413

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'eDPhiToPfMet1.10')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 52
Median for expected limits: 1.14453
Sigma  for expected limits: 0.583955

 -- Asymptotic -- 
Expected  2.5%: r < 0.5857
Expected 16.0%: r < 0.7974
Expected 50.0%: r < 1.1445
Expected 84.0%: r < 1.6692
Expected 97.5%: r < 2.3413

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'eDPhiToPfMet1.30')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 52
Median for expected limits: 1.14453
Sigma  for expected limits: 0.583955

 -- Asymptotic -- 
Expected  2.5%: r < 0.5857
Expected 16.0%: r < 0.7974
Expected 50.0%: r < 1.1445
Expected 84.0%: r < 1.6692
Expected 97.5%: r < 2.3413

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'eDPhiToPfMet1.50')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 52
Median for expected limits: 1.14453
Sigma  for expected limits: 0.583955

 -- Asymptotic -- 
Expected  2.5%: r < 0.5857
Expected 16.0%: r < 0.7974
Expected 50.0%: r < 1.1445
Expected 84.0%: r < 1.6692
Expected 97.5%: r < 2.3413

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mDPhiToPfMet1.00')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 45
Median for expected limits: 1.14453
Sigma  for expected limits: 0.583955

 -- Asymptotic -- 
Expected  2.5%: r < 0.5834
Expected 16.0%: r < 0.7960
Expected 50.0%: r < 1.1445
Expected 84.0%: r < 1.6601
Expected 97.5%: r < 2.3356

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mDPhiToPfMet1.20')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 45
Median for expected limits: 1.14453
Sigma  for expected limits: 0.583955

 -- Asymptotic -- 
Expected  2.5%: r < 0.5834
Expected 16.0%: r < 0.7960
Expected 50.0%: r < 1.1445
Expected 84.0%: r < 1.6601
Expected 97.5%: r < 2.3356

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mDPhiToPfMet1.40')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 45
Median for expected limits: 1.14453
Sigma  for expected limits: 0.583955

 -- Asymptotic -- 
Expected  2.5%: r < 0.5834
Expected 16.0%: r < 0.7960
Expected 50.0%: r < 1.1445
Expected 84.0%: r < 1.6601
Expected 97.5%: r < 2.3356

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mDPhiToPfMet1.60')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 45
Median for expected limits: 1.14453
Sigma  for expected limits: 0.583955

 -- Asymptotic -- 
Expected  2.5%: r < 0.5834
Expected 16.0%: r < 0.7960
Expected 50.0%: r < 1.1445
Expected 84.0%: r < 1.6601
Expected 97.5%: r < 2.3356

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mDPhiToPfMet1.80')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 45
Median for expected limits: 1.14453
Sigma  for expected limits: 0.583955

 -- Asymptotic -- 
Expected  2.5%: r < 0.5834
Expected 16.0%: r < 0.7960
Expected 50.0%: r < 1.1445
Expected 84.0%: r < 1.6601
Expected 97.5%: r < 2.3356

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mDPhiToPfMet2.00')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 45
Median for expected limits: 1.14453
Sigma  for expected limits: 0.583955

 -- Asymptotic -- 
Expected  2.5%: r < 0.5879
Expected 16.0%: r < 0.7988
Expected 50.0%: r < 1.1445
Expected 84.0%: r < 1.6692
Expected 97.5%: r < 2.3413

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mDPhiToPfMet2.20')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 44
Median for expected limits: 1.14453
Sigma  for expected limits: 0.583955

 -- Asymptotic -- 
Expected  2.5%: r < 0.5857
Expected 16.0%: r < 0.7974
Expected 50.0%: r < 1.1445
Expected 84.0%: r < 1.6692
Expected 97.5%: r < 2.3413

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mDPhiToPfMet2.40')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 42
Median for expected limits: 1.15234
Sigma  for expected limits: 0.587941

 -- Asymptotic -- 
Expected  2.5%: r < 0.5919
Expected 16.0%: r < 0.8043
Expected 50.0%: r < 1.1523
Expected 84.0%: r < 1.6806
Expected 97.5%: r < 2.3573

Done in 0.00 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mDPhiToPfMet2.60')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 40
Median for expected limits: 1.18359
Sigma  for expected limits: 0.603885

 -- Asymptotic -- 
Expected  2.5%: r < 0.6034
Expected 16.0%: r < 0.8232
Expected 50.0%: r < 1.1836
Expected 84.0%: r < 1.7261
Expected 97.5%: r < 2.4212

Done in 0.00 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mDPhiToPfMet2.80')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 39
Median for expected limits: 1.30859
Sigma  for expected limits: 0.667662

 -- Asymptotic -- 
Expected  2.5%: r < 0.6722
Expected 16.0%: r < 0.9133
Expected 50.0%: r < 1.3086
Expected 84.0%: r < 1.9084
Expected 97.5%: r < 2.6769

Done in 0.00 min (cpu), 0.00 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mDPhiToPfMet3.00')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 35
Median for expected limits: 1.64844
Sigma  for expected limits: 0.841055

 -- Asymptotic -- 
Expected  2.5%: r < 0.8017
Expected 16.0%: r < 1.1159
Expected 50.0%: r < 1.6484
Expected 84.0%: r < 2.4829
Expected 97.5%: r < 3.6193

Done in 0.00 min (cpu), 0.00 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mMtToPfMet30')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 52
Median for expected limits: 1.14453
Sigma  for expected limits: 0.583955

 -- Asymptotic -- 
Expected  2.5%: r < 0.5879
Expected 16.0%: r < 0.7988
Expected 50.0%: r < 1.1445
Expected 84.0%: r < 1.6692
Expected 97.5%: r < 2.3413

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mMtToPfMet60')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 52
Median for expected limits: 1.14453
Sigma  for expected limits: 0.583955

 -- Asymptotic -- 
Expected  2.5%: r < 0.5879
Expected 16.0%: r < 0.7988
Expected 50.0%: r < 1.1445
Expected 84.0%: r < 1.6692
Expected 97.5%: r < 2.3413

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mMtToPfMet90')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 47
Median for expected limits: 1.14453
Sigma  for expected limits: 0.583955

 -- Asymptotic -- 
Expected  2.5%: r < 0.5857
Expected 16.0%: r < 0.7974
Expected 50.0%: r < 1.1445
Expected 84.0%: r < 1.6692
Expected 97.5%: r < 2.3413

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mMtToPfMet120')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 45
Median for expected limits: 1.14453
Sigma  for expected limits: 0.583955

 -- Asymptotic -- 
Expected  2.5%: r < 0.5857
Expected 16.0%: r < 0.7974
Expected 50.0%: r < 1.1445
Expected 84.0%: r < 1.6692
Expected 97.5%: r < 2.3413

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mMtToPfMet150')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 39
Median for expected limits: 1.14453
Sigma  for expected limits: 0.583955

 -- Asymptotic -- 
Expected  2.5%: r < 0.5857
Expected 16.0%: r < 0.7974
Expected 50.0%: r < 1.1445
Expected 84.0%: r < 1.6692
Expected 97.5%: r < 2.3413

Done in 0.00 min (cpu), 0.00 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mMtToPfMet180')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 38
Median for expected limits: 1.10547
Sigma  for expected limits: 0.564025

 -- Asymptotic -- 
Expected  2.5%: r < 0.5635
Expected 16.0%: r < 0.7689
Expected 50.0%: r < 1.1055
Expected 84.0%: r < 1.6122
Expected 97.5%: r < 2.2751

Done in 0.00 min (cpu), 0.00 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mMtToPfMet210')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 38
Median for expected limits: 1.05859
Sigma  for expected limits: 0.540109

 -- Asymptotic -- 
Expected  2.5%: r < 0.5396
Expected 16.0%: r < 0.7363
Expected 50.0%: r < 1.0586
Expected 84.0%: r < 1.5523
Expected 97.5%: r < 2.1968

Done in 0.00 min (cpu), 0.00 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mMtToPfMet240')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 37
Median for expected limits: 1.08203
Sigma  for expected limits: 0.552067

 -- Asymptotic -- 
Expected  2.5%: r < 0.5474
Expected 16.0%: r < 0.7499
Expected 50.0%: r < 1.0820
Expected 84.0%: r < 1.5867
Expected 97.5%: r < 2.2455

Done in 0.00 min (cpu), 0.00 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mMtToPfMet270')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 35
Median for expected limits: 1.12891
Sigma  for expected limits: 0.575983

 -- Asymptotic -- 
Expected  2.5%: r < 0.5711
Expected 16.0%: r < 0.7824
Expected 50.0%: r < 1.1289
Expected 84.0%: r < 1.6644
Expected 97.5%: r < 2.3621

Done in 0.00 min (cpu), 0.00 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mMtToPfMet300')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 34
Median for expected limits: 1.22266
Sigma  for expected limits: 0.623816

 -- Asymptotic -- 
Expected  2.5%: r < 0.6089
Expected 16.0%: r < 0.8367
Expected 50.0%: r < 1.2227
Expected 84.0%: r < 1.8124
Expected 97.5%: r < 2.5939

Done in 0.00 min (cpu), 0.00 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mMtToPfMet330')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 32
Median for expected limits: 1.29297
Sigma  for expected limits: 0.65969

 -- Asymptotic -- 
Expected  2.5%: r < 0.6389
Expected 16.0%: r < 0.8816
Expected 50.0%: r < 1.2930
Expected 84.0%: r < 1.9475
Expected 97.5%: r < 2.8234

Done in 0.00 min (cpu), 0.00 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mMtToPfMet360')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 31
Median for expected limits: 1.57031
Sigma  for expected limits: 0.801195

 -- Asymptotic -- 
Expected  2.5%: r < 0.7576
Expected 16.0%: r < 1.0528
Expected 50.0%: r < 1.5703
Expected 84.0%: r < 2.3903
Expected 97.5%: r < 3.5175

Done in 0.00 min (cpu), 0.00 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mMtToPfMet390')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 29
Median for expected limits: 1.64844
Sigma  for expected limits: 0.841055

 -- Asymptotic -- 
Expected  2.5%: r < 0.7051
Expected 16.0%: r < 1.0367
Expected 50.0%: r < 1.6484
Expected 84.0%: r < 2.7129
Expected 97.5%: r < 4.2760

Done in 0.00 min (cpu), 0.00 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mMtToPfMet420')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 28
Median for expected limits: 3.54688
Sigma  for expected limits: 1.80966

 -- Asymptotic -- 
Expected  2.5%: r < 1.3024
Expected 16.0%: r < 2.0739
Expected 50.0%: r < 3.5469
Expected 84.0%: r < 6.1200
Expected 97.5%: r < 10.0201

Done in 0.00 min (cpu), 0.00 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mMtToPfMet450')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 28
WARNING: Best fit of asimov dataset is at r = 0.021085 (0.001054 times rMax), while it should be at zero
Median for expected limits: 11.4062
Sigma  for expected limits: 5.81962

 -- Asymptotic -- 
Expected  2.5%: r < 4.7897
Expected 16.0%: r < 7.0900
Expected 50.0%: r < 11.4062
Expected 84.0%: r < 19.1354
Expected 97.5%: r < 30.4330

Done in 0.00 min (cpu), 0.00 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mMtToPfMet480')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 26
WARNING: Best fit of asimov dataset is at r = 0.037009 (0.001850 times rMax), while it should be at zero
Median for expected limits: 48.9688
Sigma  for expected limits: 24.9845

 -- Asymptotic -- 
Expected  2.5%: r < 19.2241
Expected 16.0%: r < 29.3326
Expected 50.0%: r < 48.9688
Expected 84.0%: r < 84.4936
Expected 97.5%: r < 138.3390

Done in 0.00 min (cpu), 0.00 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mMtToPfMet510')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 26
WARNING: Best fit of asimov dataset is at r = 0.047813 (0.002391 times rMax), while it should be at zero
Median for expected limits: 116.75
Sigma  for expected limits: 59.5674

 -- Asymptotic -- 
Expected  2.5%: r < 38.6506
Expected 16.0%: r < 63.9719
Expected 50.0%: r < 116.7500
Expected 84.0%: r < 218.2008
Expected 97.5%: r < 353.9508

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mMtToPfMet540')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 25
WARNING: Best fit of asimov dataset is at r = 0.200000 (0.010000 times rMax), while it should be at zero
Median for expected limits: 4000
Sigma  for expected limits: 2040.85

 -- Asymptotic -- 

Done in 0.07 min (cpu), 0.07 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mMtToPfMet570')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 24
WARNING: Best fit of asimov dataset is at r = 0.200000 (0.010000 times rMax), while it should be at zero
Median for expected limits: 4000
Sigma  for expected limits: 2040.85

 -- Asymptotic -- 

Done in 0.07 min (cpu), 0.07 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mMtToPfMet600')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 24
WARNING: Best fit of asimov dataset is at r = 0.200000 (0.010000 times rMax), while it should be at zero
Median for expected limits: 4000
Sigma  for expected limits: 2040.85

 -- Asymptotic -- 

Done in 0.07 min (cpu), 0.07 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mMtToPfMet630')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 23
WARNING: Best fit of asimov dataset is at r = 0.200000 (0.010000 times rMax), while it should be at zero
Median for expected limits: 4000
Sigma  for expected limits: 2040.85

 -- Asymptotic -- 

Done in 0.07 min (cpu), 0.07 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mMtToPfMet660')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 22
WARNING: Best fit of asimov dataset is at r = 0.200000 (0.010000 times rMax), while it should be at zero
Median for expected limits: 4000
Sigma  for expected limits: 2040.85

 -- Asymptotic -- 

Done in 0.06 min (cpu), 0.06 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'mMtToPfMet690')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 21
WARNING: Best fit of asimov dataset is at r = 0.200000 (0.010000 times rMax), while it should be at zero
Median for expected limits: 4000
Sigma  for expected limits: 2040.85

 -- Asymptotic -- 

Done in 0.06 min (cpu), 0.06 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'eMtToPfMet250')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 52
Median for expected limits: 1.14453
Sigma  for expected limits: 0.583955

 -- Asymptotic -- 
Expected  2.5%: r < 0.5857
Expected 16.0%: r < 0.7974
Expected 50.0%: r < 1.1445
Expected 84.0%: r < 1.6692
Expected 97.5%: r < 2.3413

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'eMtToPfMet230')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 52
Median for expected limits: 1.14453
Sigma  for expected limits: 0.583955

 -- Asymptotic -- 
Expected  2.5%: r < 0.5857
Expected 16.0%: r < 0.7974
Expected 50.0%: r < 1.1445
Expected 84.0%: r < 1.6692
Expected 97.5%: r < 2.3413

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'eMtToPfMet210')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 52
Median for expected limits: 1.14453
Sigma  for expected limits: 0.583955

 -- Asymptotic -- 
Expected  2.5%: r < 0.5857
Expected 16.0%: r < 0.7974
Expected 50.0%: r < 1.1445
Expected 84.0%: r < 1.6692
Expected 97.5%: r < 2.3413

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'eMtToPfMet190')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 52
Median for expected limits: 1.14453
Sigma  for expected limits: 0.583955

 -- Asymptotic -- 
Expected  2.5%: r < 0.5857
Expected 16.0%: r < 0.7974
Expected 50.0%: r < 1.1445
Expected 84.0%: r < 1.6692
Expected 97.5%: r < 2.3413

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'eMtToPfMet170')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 52
Median for expected limits: 1.14453
Sigma  for expected limits: 0.583955

 -- Asymptotic -- 
Expected  2.5%: r < 0.5857
Expected 16.0%: r < 0.7974
Expected 50.0%: r < 1.1445
Expected 84.0%: r < 1.6692
Expected 97.5%: r < 2.3413

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'eMtToPfMet150')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 52
Median for expected limits: 1.14453
Sigma  for expected limits: 0.583955

 -- Asymptotic -- 
Expected  2.5%: r < 0.5857
Expected 16.0%: r < 0.7974
Expected 50.0%: r < 1.1445
Expected 84.0%: r < 1.6692
Expected 97.5%: r < 2.3413

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'eMtToPfMet130')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 52
Median for expected limits: 1.14453
Sigma  for expected limits: 0.583955

 -- Asymptotic -- 
Expected  2.5%: r < 0.5857
Expected 16.0%: r < 0.7974
Expected 50.0%: r < 1.1445
Expected 84.0%: r < 1.6692
Expected 97.5%: r < 2.3413

Done in 0.01 min (cpu), 0.01 min (real)


('CALCULATING EXPECTED LIMIT FOR 1-jet CATEGORY, for cut : ', 'eMtToPfMet110')
>>> including systematics
>>> method used to compute upper limit is Asymptotic
>>> random number generator seed is 123456
[?1034hComputing limit starting from expected outcome
Will compute expected limit(s) using minimizer Minuit2 with strategy 0 and tolerance 0.01
Constraints of type SimpleGaussianConstraint: 52
Median for expected limits: 1.14453
Sigma  for expected limits: 0.583955

 -- Asymptotic -- 
Expected  2.5%: r < 0.5857
Expected 16.0%: r < 0.7974
Expected 50.0%: r < 1.1445
Expected 84.0%: r < 1.6692
Expected 97.5%: r < 2.3413

Done in 0.01 min (cpu), 0.01 min (real)


